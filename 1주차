#include <stdio.h>

/*
	일상생활에서의 사물의 조직화

	해야할일 리스트,티켓 판매, 회사의 조직도, 사전, 책정리 등
	다양한 정리방법과 구조로 되었고 

	일상생활과 자료구조의 비교 
	리스트 ,스택,큐 등

	자료구조 와 알고리즘 
	프로그램 = 자료구조 + 알고리즘 
	ex) 최대값 탐색 프로그램 = 배열 + 순차 탐색 

	알고리즘 

	알고리즘(algorithm): 컴퓨터로 문제를 풀기 위한 단계적인 절차

	알고리즘의 조건 
	- 일력: 0개 이상의 입력이 존재하여야 한다.
	- 출력: 1개 이상의 출력이 존재하여야 한다. 
	- 명백성: 각 명령어의 의미는 모호하지 않고 명확해야 한다. 
	- 유한성: 한정된 수의 단계 후에는 반드시 종료되어야 한다. 
	- 유효성 각 명령어들은 실행 가능한 연산이어야 한다. 


	일고리즘의 기술 방법

	- 영어나 한국어와 같은 자연어
		인간이 읽기가 쉽다. 
		그러나 자연어의 단어들을 정확하게 정의하지 않으면 의미 전달이 모호해질 우려가 있다.
		작성자의 따라 의미전달의 정확도가 달라진다.
	- 흐름도(flow chart)
		직관적이고 이해하기 쉬운 알고리즘 기술 방법
		그러나 복잡한  알고리즘의 경우, 상당히 복잡해짐 
		ex) 순서도,그림
	- 유사 코드 ( pseudo- code)
		유사코드로 표현된 알고리즘 
		알고리즘 기술에 가장 많이 사용
		프로그램을 구현할때 여러가지 문제들을 감출수있다.
		즉 알고리즘의 핵심적인 내용에만 집중할수 있다. 
	- C와 같은 프로그래밍 언어
		가장 정확한 코드 그자체 
		알고리즘의 핵심파악에 있어서는 내용들이 방해가 될수 있다. 

	알고리즘의 성능분석
	수행시간 측정
	두개의 알고리즘의 실제 수행시간을 측정하는 ㄱ서 
	실제로 구현하는 것이 필요
	동일한 하드웨어를 상용하여야 함

	-실제 우리는 코드로 구현하지 않고 복잡도 분석

	알고리즘의 복잡도 분석
	직접 구현하지 않고서도 수행시간을 분석하는것
	알고리즘이 수행하는 연산의 횟수를 측정하여 비교
	일반적인 연산의 횟수는 n의 함수로 표현
	시간 복잡도 분석: 수행 시간 분석
	공간 복잡도 분석: 수행시 필요로 하는 메모리 공간 분석(예전에는 중요했지만 지금은 아니다.)

	수행 시간 측정 
	clock함수를 사용

	clock_t clock(void);

	#include <time.h>
	
	void main(void)
	{
		clock_t,start,finish;
		double duration;
		start = clock();
		// 수행시간을 측정할 코드
		finish = clock();
		duration =(double)(finish - start)/CLOCKS_PER_SEC;
		printf("%f 초입니다. \n", duration);

	}


*/
